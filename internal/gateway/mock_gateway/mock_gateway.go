// Code generated by MockGen. DO NOT EDIT.
// Source: internal/gateway/interface.go

// Package mock_gateway is a generated GoMock package.
package mock_gateway

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	stock "github.com/marcosvliras/sophie/stock"
)

// MockIGateway is a mock of IGateway interface.
type MockIGateway struct {
	ctrl     *gomock.Controller
	recorder *MockIGatewayMockRecorder
}

// MockIGatewayMockRecorder is the mock recorder for MockIGateway.
type MockIGatewayMockRecorder struct {
	mock *MockIGateway
}

// NewMockIGateway creates a new mock instance.
func NewMockIGateway(ctrl *gomock.Controller) *MockIGateway {
	mock := &MockIGateway{ctrl: ctrl}
	mock.recorder = &MockIGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGateway) EXPECT() *MockIGatewayMockRecorder {
	return m.recorder
}

// GetData mocks base method.
func (m *MockIGateway) GetData(symbol string) (stock.Stock, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData", symbol)
	ret0, _ := ret[0].(stock.Stock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetData indicates an expected call of GetData.
func (mr *MockIGatewayMockRecorder) GetData(symbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockIGateway)(nil).GetData), symbol)
}
